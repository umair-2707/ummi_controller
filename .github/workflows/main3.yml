name: python ci pipeline
on: [push, pull_request]
jobs: 
  build: 
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.11, 3.12]
        include:
          # add a specific combination that isn't in the general matrix
          - os: ubuntu-20.04
            python-version: 3.11
        exclude:
          # exclude specific combinations
          - os: windows-latest
            python-version: 3.12
          - os: macos-latest
            python-version: 3.12
    steps:
      - name: Checkout code 
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run tests
        run: |
          mkdir -p test-results
          pytest --junitxml=test-results/results.xml
      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: test_results
          path: test-results/
      - name: Build project
        run: |
          mkdir -p build
          echo "This is a build output for Python ${{ matrix.python-version }} on ${{ matrix.os }}" > build/output.txt
      - name: Upload build artifact 
        uses: actions/upload-artifact@v3
        with: 
          name: build_artifacts
          path: build/
  download:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download test results
        uses: actions/download-artifact@v3
        with:
          name: test_results
          path: download-test-results/
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build_artifacts
          path: download-build-artifacts/
      - name: Display downloaded test results
        run: cat download-test-results/results.xml
      - name: Display downloaded build artifacts
        run: cat download-build-artifacts/output.txt
